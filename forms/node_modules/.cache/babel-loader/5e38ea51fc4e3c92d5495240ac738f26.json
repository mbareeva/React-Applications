{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useInput = validateValue => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [inputTouched, setInputTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = inputTouched && !valueIsValid;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const valueBlurHandler = event => {\n    setInputTouched(true);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: hasError,\n    valueChangeHandler,\n    valueBlurHandler\n  };\n};\n\n_s(useInput, \"XRgcdP33XKmHWRfbDI4hHgsds0Q=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/mayyabareeva/Downloads/React-Applications-main/forms/src/hooks/use-input.js"],"names":["useState","useInput","validateValue","enteredValue","setEnteredValue","inputTouched","setInputTouched","valueIsValid","hasError","valueChangeHandler","event","target","value","valueBlurHandler","isValid"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMO,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,QAAQ,GAAGH,YAAY,IAAI,CAACE,YAAlC;;AAGA,QAAME,kBAAkB,GAAGC,KAAK,IAAI;AAChCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGH,KAAK,IAAI;AAC9BJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH,GAFD;;AAIA,SAAO;AACHM,IAAAA,KAAK,EAAET,YADJ;AAEHW,IAAAA,OAAO,EACPN,QAHG;AAIHC,IAAAA,kBAJG;AAKHI,IAAAA;AALG,GAAP;AAOH,CAtBD;;GAAMZ,Q;;AAwBN,eAAeA,QAAf","sourcesContent":["import {useState} from \"react\";\n\nconst useInput = (validateValue) => {\n    const [enteredValue, setEnteredValue] = useState('')\n    const [inputTouched, setInputTouched] = useState(false)\n    const valueIsValid = validateValue(enteredValue)\n    const hasError = inputTouched && !valueIsValid\n\n\n    const valueChangeHandler = event => {\n        setEnteredValue(event.target.value);\n    }\n\n    const valueBlurHandler = event => {\n        setInputTouched(true)\n    }\n\n    return {\n        value: enteredValue,\n        isValid:\n        hasError,\n        valueChangeHandler,\n        valueBlurHandler\n    }\n}\n\nexport default useInput"]},"metadata":{},"sourceType":"module"}