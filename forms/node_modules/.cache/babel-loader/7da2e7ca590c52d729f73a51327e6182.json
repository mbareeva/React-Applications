{"ast":null,"code":"var _jsxFileName = \"/Users/mayyabareeva/Downloads/React-Applications-main/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from './../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredValue,\n    hasError: inputHasError,\n    isValid: enteredInputIsValid,\n    valueChangeHandler: inputChangedHandler,\n    valueBlurHandler: inputBlurHandler,\n    reset: resetInput\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmailValue,\n    hasError: inputEmailHasError,\n    isValid: enteredInputEmailIsValid,\n    valueChangeHandler: inputEmailChangedHandler,\n    valueBlurHandler: inputEmailBlurHandler,\n    reset: resetInputEmail\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n\n  if (enteredInputIsValid && enteredInputEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredInputIsValid || !enteredInputEmailIsValid) {\n      return;\n    }\n\n    resetInput();\n    resetInputEmail();\n  };\n\n  const nameInputClasses = inputHasError ? 'form-control' : 'form-control invalid ';\n  const emailInputClasses = inputEmailHasError ? 'form-control' : 'form-control invalid ';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputChangedHandler,\n        onBlur: inputBlurHandler,\n        value: enteredValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), enteredInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'input',\n        children: \"Invalid input. Entered name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: inputEmailChangedHandler,\n        onBlur: inputEmailBlurHandler,\n        value: enteredEmailValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), enteredInputEmailIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'input',\n        children: \"Invalid input. Entered email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"PUI7M1Ba1JfwvDwQDpyGtmOCI+Y=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/mayyabareeva/Downloads/React-Applications-main/forms/src/components/SimpleInput.js"],"names":["useState","useInput","SimpleInput","props","value","enteredValue","hasError","inputHasError","isValid","enteredInputIsValid","valueChangeHandler","inputChangedHandler","valueBlurHandler","inputBlurHandler","reset","resetInput","trim","enteredEmailValue","inputEmailHasError","enteredInputEmailIsValid","inputEmailChangedHandler","inputEmailBlurHandler","resetInputEmail","includes","formIsValid","formSubmissionHandler","event","preventDefault","nameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport useInput from './../hooks/use-input'\nconst SimpleInput = (props) => {\n    const {\n        value: enteredValue,\n        hasError: inputHasError,\n        isValid: enteredInputIsValid,\n        valueChangeHandler: inputChangedHandler,\n        valueBlurHandler: inputBlurHandler,\n        reset: resetInput\n\n    } = useInput(value => value.trim() !== '')\n\n    const {\n        value: enteredEmailValue,\n        hasError: inputEmailHasError,\n        isValid: enteredInputEmailIsValid,\n        valueChangeHandler: inputEmailChangedHandler,\n        valueBlurHandler: inputEmailBlurHandler,\n        reset: resetInputEmail\n    } = useInput(value => value.includes('@'))\n\n    let formIsValid = false;\n    if(enteredInputIsValid && enteredInputEmailIsValid) {\n        formIsValid = true\n    }\n\n    const formSubmissionHandler = event => {\n        event.preventDefault()\n        if(!enteredInputIsValid || !enteredInputEmailIsValid) {\n            return;\n        }\n        resetInput()\n        resetInputEmail()\n    }\n\n    const nameInputClasses = inputHasError ? 'form-control' : 'form-control invalid '\n    const emailInputClasses = inputEmailHasError ? 'form-control' : 'form-control invalid '\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={inputChangedHandler} onBlur={inputBlurHandler} value={enteredValue}/>\n          {enteredInputIsValid && <p className={'input'}>Invalid input. Entered name must not be empty.</p>}\n      </div >\n        <div className={emailInputClasses}>\n            <label htmlFor='email'>Your Email</label>\n            <input type='email' id='email' onChange={inputEmailChangedHandler} onBlur={inputEmailBlurHandler} value={enteredEmailValue}/>\n            {enteredInputEmailIsValid && <p className={'input'}>Invalid input. Entered email must not be empty.</p>}\n        </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}