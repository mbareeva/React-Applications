{"ast":null,"code":"var _jsxFileName = \"/Users/mayyabareeva/Downloads/React-Applications-main/forms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from './../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredValue,\n    hasError: inputHasError,\n    isValid: enteredInputIsValid,\n    valueChangeHandler: inputChangedHandler,\n    valueBlurHandler: inputBlurHandler,\n    reset: resetInput\n  } = useInput(value => value.trim() !== '' || value.includes('@'));\n  let formIsValid = false;\n\n  if (enteredInputIsValid) {\n    formIsValid = true;\n  }\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEmailFieldTouched(true);\n\n    if (!enteredEmailIsValid) {\n      return;\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setInputFieldTouched(true);\n    setEmailFieldTouched(true);\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    resetInput();\n    setInputFieldTouched(false);\n    setEmailFieldTouched(false);\n  };\n\n  const nameInputClasses = inputHasError ? 'form-control' : 'form-control invalid ';\n  const emailInputClasses = !nameInputIsInvalid ? 'form-control' : 'form-control invalid ';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputChangedHandler,\n        onBlur: inputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), enteredInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'input',\n        children: \"Invalid input. Entered name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: 'input',\n        children: \"Invalid input. Entered email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"V3PLbeQCtPa5MvxOcsoCU2ZqGJI=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/mayyabareeva/Downloads/React-Applications-main/forms/src/components/SimpleInput.js"],"names":["useState","useInput","SimpleInput","props","value","enteredValue","hasError","inputHasError","isValid","enteredInputIsValid","valueChangeHandler","inputChangedHandler","valueBlurHandler","inputBlurHandler","reset","resetInput","trim","includes","formIsValid","emailInputChangeHandler","event","setEnteredEmail","target","emailInputBlurHandler","setEmailFieldTouched","enteredEmailIsValid","formSubmissionHandler","preventDefault","setInputFieldTouched","enteredNameIsValid","nameInputClasses","emailInputClasses","nameInputIsInvalid","enteredName","enteredEmail","emailInputIsInvalid"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AACFC,IAAAA,KAAK,EAAEC,YADL;AAEFC,IAAAA,QAAQ,EAAEC,aAFR;AAGFC,IAAAA,OAAO,EAAEC,mBAHP;AAIFC,IAAAA,kBAAkB,EAAEC,mBAJlB;AAKFC,IAAAA,gBAAgB,EAAEC,gBALhB;AAMFC,IAAAA,KAAK,EAAEC;AANL,MAQFd,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACY,IAAN,OAAiB,EAAjB,IAAuBZ,KAAK,CAACa,QAAN,CAAe,GAAf,CAAjC,CARZ;AAUA,MAAIC,WAAW,GAAG,KAAlB;;AACA,MAAGT,mBAAH,EAAwB;AACpBS,IAAAA,WAAW,GAAG,IAAd;AACH;;AAGD,QAAMC,uBAAuB,GAAGC,KAAK,IAAI;AACrCC,IAAAA,eAAe,CAACD,KAAK,CAACE,MAAN,CAAalB,KAAd,CAAf;AACH,GAFD;;AAIA,QAAMmB,qBAAqB,GAAGH,KAAK,IAAI;AACnCI,IAAAA,oBAAoB,CAAC,IAAD,CAApB;;AACA,QAAG,CAACC,mBAAJ,EAAyB;AACrB;AACH;AACJ,GALD;;AAOA,QAAMC,qBAAqB,GAAGN,KAAK,IAAI;AACnCA,IAAAA,KAAK,CAACO,cAAN;AACAC,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAJ,IAAAA,oBAAoB,CAAC,IAAD,CAApB;;AACA,QAAG,CAACK,kBAAD,IAAuB,CAACJ,mBAA3B,EAAgD;AAC5C;AACH;;AACDV,IAAAA,UAAU;AACVa,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAJ,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,GAVD;;AAYA,QAAMM,gBAAgB,GAAGvB,aAAa,GAAG,cAAH,GAAoB,uBAA1D;AACA,QAAMwB,iBAAiB,GAAG,CAACC,kBAAD,GAAsB,cAAtB,GAAuC,uBAAjE;AACF,sBACE;AAAM,IAAA,QAAQ,EAAEN,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAEnB,mBAAvC;AAA4D,QAAA,MAAM,EAAEE,gBAApE;AAAsF,QAAA,KAAK,EAAEoB;AAA7F;AAAA;AAAA;AAAA;AAAA,cAFF,EAGKxB,mBAAmB,iBAAI;AAAG,QAAA,SAAS,EAAE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAMI;AAAK,MAAA,SAAS,EAAEsB,iBAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,OAAvB;AAA+B,QAAA,QAAQ,EAAEZ,uBAAzC;AAAkE,QAAA,MAAM,EAAEI,qBAA1E;AAAiG,QAAA,KAAK,EAAEW;AAAxG;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKC,mBAAmB,iBAAI;AAAG,QAAA,SAAS,EAAE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH5B;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACjB,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3DD;;GAAMhB,W;UASED,Q;;;KATFC,W;AA6DN,eAAeA,WAAf","sourcesContent":["import {useState} from 'react'\nimport useInput from './../hooks/use-input'\nconst SimpleInput = (props) => {\n    const {\n        value: enteredValue,\n        hasError: inputHasError,\n        isValid: enteredInputIsValid,\n        valueChangeHandler: inputChangedHandler,\n        valueBlurHandler: inputBlurHandler,\n        reset: resetInput\n\n    } = useInput(value => value.trim() !== '' || value.includes('@'))\n\n    let formIsValid = false;\n    if(enteredInputIsValid) {\n        formIsValid = true\n    }\n\n\n    const emailInputChangeHandler = event => {\n        setEnteredEmail(event.target.value);\n    }\n\n    const emailInputBlurHandler = event => {\n        setEmailFieldTouched(true)\n        if(!enteredEmailIsValid) {\n            return\n        }\n    }\n\n    const formSubmissionHandler = event => {\n        event.preventDefault()\n        setInputFieldTouched(true)\n        setEmailFieldTouched(true)\n        if(!enteredNameIsValid || !enteredEmailIsValid) {\n            return;\n        }\n        resetInput()\n        setInputFieldTouched(false)\n        setEmailFieldTouched(false)\n    }\n\n    const nameInputClasses = inputHasError ? 'form-control' : 'form-control invalid '\n    const emailInputClasses = !nameInputIsInvalid ? 'form-control' : 'form-control invalid '\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={inputChangedHandler} onBlur={inputBlurHandler} value={enteredName}/>\n          {enteredInputIsValid && <p className={'input'}>Invalid input. Entered name must not be empty.</p>}\n      </div >\n        <div className={emailInputClasses}>\n            <label htmlFor='email'>Your Email</label>\n            <input type='email' id='email' onChange={emailInputChangeHandler} onBlur={emailInputBlurHandler} value={enteredEmail}/>\n            {emailInputIsInvalid && <p className={'input'}>Invalid input. Entered email must not be empty.</p>}\n        </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}