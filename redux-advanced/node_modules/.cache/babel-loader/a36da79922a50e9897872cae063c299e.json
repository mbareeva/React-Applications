{"ast":null,"code":"import { uiActions } from \"./ui\";\nimport { cartActions } from \"./cart\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-app-2-5f344-default-rtdb.europe-west1.firebasedatabase.app/cart.json');\n\n      if (!response.ok) {\n        throw new Error('Cart data can not be fetched!');\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const dataCart = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: dataCart.items || [],\n        totalQuantity: dataCart.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: \"Error\",\n        message: \"Error fetching data!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'sending',\n      title: 'Sending...',\n      message: 'Sending cart data'\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch('https://react-app-2-5f344-default-rtdb.europe-west1.firebasedatabase.app/cart.json', {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      console.log(cart);\n\n      if (!response.ok) {\n        throw new Error('Cart data can not be saved!');\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'sent',\n        title: \"Success\",\n        message: 'Successfully sent!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: \"Error\",\n        message: \"Error occurred!\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mayyabareeva/Documents/React-applications/React-Applications/redux-advanced/src/store/cart-actions.js"],"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","dataCart","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","console","log"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,MAAxB;AACA,SAAQC,WAAR,QAA0B,QAA1B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oFAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACH;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,aAAOD,IAAP;AACH,KAPD;;AASA,QAAI;AACA,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAD,MAAAA,QAAQ,CAACF,WAAW,CAACW,WAAZ,CAAwB;AAC7BC,QAAAA,KAAK,EAAEF,QAAQ,CAACE,KAAT,IAAkB,EADI;AAE7BC,QAAAA,aAAa,EAAEH,QAAQ,CAACG;AAFK,OAAxB,CAAD,CAAR;AAIH,KAND,CAME,OAAOC,KAAP,EAAc;AACZZ,MAAAA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CAA2B;AAChCC,QAAAA,MAAM,EAAE,OADwB;AAEhCC,QAAAA,KAAK,EAAE,OAFyB;AAGhCC,QAAAA,OAAO,EAAE;AAHuB,OAA3B,CAAD,CAAR;AAKH;AACJ,GAvBD;AAwBH,CAzBM;AA0BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO,MAAOlB,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CAA2B;AAC5BC,MAAAA,MAAM,EAAE,SADoB;AAE5BC,MAAAA,KAAK,EAAE,YAFqB;AAG5BC,MAAAA,OAAO,EAAE;AAHmB,KAA3B,CAAD,CAAR;;AAOA,UAAMG,WAAW,GAAG,YAAY;AAC5B,YAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,oFAAD,EACxB;AACIiB,QAAAA,MAAM,EAAE,KADZ;AAEIC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAFV,OADwB,CAA5B;AAKAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AACA,UAAI,CAAChB,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACH;AACJ,KAVD;;AAYA,QAAI;AACA,YAAMc,WAAW,EAAjB;AACAnB,MAAAA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CAA2B;AAChCC,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,KAAK,EAAE,SAFyB;AAGhCC,QAAAA,OAAO,EAAE;AAHuB,OAA3B,CAAD,CAAR;AAKH,KAPD,CAOE,OAAOJ,KAAP,EAAc;AACZZ,MAAAA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CAA2B;AAChCC,QAAAA,MAAM,EAAE,OADwB;AAEhCC,QAAAA,KAAK,EAAE,OAFyB;AAGhCC,QAAAA,OAAO,EAAE;AAHuB,OAA3B,CAAD,CAAR;AAKH;AACJ,GAlCD;AAmCH,CApCM","sourcesContent":["import {uiActions} from \"./ui\";\nimport {cartActions} from \"./cart\";\n\nexport const fetchCartData = () => {\n    return async (dispatch) => {\n        const fetchData = async () => {\n            const response = await fetch('https://react-app-2-5f344-default-rtdb.europe-west1.firebasedatabase.app/cart.json')\n            if (!response.ok) {\n                throw new Error('Cart data can not be fetched!')\n            }\n            const data = await response.json()\n            return data;\n        };\n\n        try {\n            const dataCart = await fetchData()\n            dispatch(cartActions.replaceCart({\n                items: dataCart.items || [],\n                totalQuantity: dataCart.totalQuantity\n            }))\n        } catch (error) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: \"Error\",\n                message: \"Error fetching data!\"\n            }))\n        }\n    }\n}\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n        dispatch(uiActions.showNotification({\n                status: 'sending',\n                title: 'Sending...',\n                message: 'Sending cart data',\n            })\n        )\n\n        const sendRequest = async () => {\n            const response = await fetch('https://react-app-2-5f344-default-rtdb.europe-west1.firebasedatabase.app/cart.json',\n                {\n                    method: \"PUT\",\n                    body: JSON.stringify(cart)\n                })\n            console.log(cart)\n            if (!response.ok) {\n                throw new Error('Cart data can not be saved!')\n            }\n        }\n\n        try {\n            await sendRequest()\n            dispatch(uiActions.showNotification({\n                status: 'sent',\n                title: \"Success\",\n                message: 'Successfully sent!'\n            }))\n        } catch (error) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: \"Error\",\n                message: \"Error occurred!\"\n            }))\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}